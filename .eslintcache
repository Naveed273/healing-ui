[{"E:\\Projects\\Healing-Waters\\src\\index.js":"1","E:\\Projects\\Healing-Waters\\src\\App.js":"2","E:\\Projects\\Healing-Waters\\src\\reportWebVitals.js":"3","E:\\Projects\\Healing-Waters\\src\\GlobalStyle.js":"4","E:\\Projects\\Healing-Waters\\src\\pages\\Home.js":"5","E:\\Projects\\Healing-Waters\\src\\components\\Navigation.js":"6","E:\\Projects\\Healing-Waters\\src\\components\\About.js":"7","E:\\Projects\\Healing-Waters\\src\\components\\Header.js":"8","E:\\Projects\\Healing-Waters\\src\\components\\GallerySmall.js":"9","E:\\Projects\\Healing-Waters\\src\\components\\Programs.js":"10","E:\\Projects\\Healing-Waters\\src\\components\\Foods.js":"11","E:\\Projects\\Healing-Waters\\src\\components\\CTA.js":"12","E:\\Projects\\Healing-Waters\\src\\components\\Footer.js":"13","E:\\Projects\\Healing-Waters\\src\\components\\Gallery.js":"14","E:\\Projects\\Healing-Waters\\src\\styles\\Button.js":"15","E:\\Projects\\Healing-Waters\\src\\styles\\icons.js":"16","E:\\Projects\\Healing-Waters\\src\\styles\\callnow.js":"17","E:\\Projects\\Healing-Waters\\src\\styles\\AboutStyled.js":"18","E:\\Projects\\Healing-Waters\\src\\styles\\HeaderStyle.js":"19","E:\\Projects\\Healing-Waters\\src\\styles\\GallerySmallStyle.js":"20","E:\\Projects\\Healing-Waters\\src\\styles\\CTAStyle.js":"21","E:\\Projects\\Healing-Waters\\src\\styles\\Programs.js":"22","E:\\Projects\\Healing-Waters\\src\\styles\\FoodsStyle.js":"23","E:\\Projects\\Healing-Waters\\src\\styles\\GalleryStyle.js":"24","E:\\Projects\\Healing-Waters\\src\\styles\\FooterStyle.js":"25","E:\\Projects\\Healing-Waters\\src\\hooks\\useRoomsList.js":"26","E:\\Projects\\Healing-Waters\\src\\api\\backendApi.js":"27","E:\\Projects\\Healing-Waters\\src\\components\\datePicker\\Datepicker.js":"28","E:\\Projects\\Healing-Waters\\src\\components\\datePicker\\CustomInput.js":"29","E:\\Projects\\Healing-Waters\\src\\components\\Services.js":"30","E:\\Projects\\Healing-Waters\\src\\components\\ServiceTransferList.js":"31","E:\\Projects\\Healing-Waters\\src\\hooks\\usePrograms.js":"32","E:\\Projects\\Healing-Waters\\src\\hooks\\useServices.js":"33","E:\\Projects\\Healing-Waters\\src\\components\\PriceIcon.js":"34","E:\\Projects\\Healing-Waters\\src\\components\\Checkout.js":"35","E:\\Projects\\Healing-Waters\\src\\hooks\\useRoomReserve.js":"36"},{"size":539,"mtime":1612163640000,"results":"37","hashOfConfig":"38"},{"size":476,"mtime":1612023633321,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1612163640000,"results":"40","hashOfConfig":"38"},{"size":523,"mtime":1612163640000,"results":"41","hashOfConfig":"38"},{"size":830,"mtime":1612163640000,"results":"42","hashOfConfig":"38"},{"size":2347,"mtime":1612277994767,"results":"43","hashOfConfig":"38"},{"size":1264,"mtime":1611985346800,"results":"44","hashOfConfig":"38"},{"size":1272,"mtime":1611985346800,"results":"45","hashOfConfig":"38"},{"size":592,"mtime":1611985346800,"results":"46","hashOfConfig":"38"},{"size":1394,"mtime":1611985346800,"results":"47","hashOfConfig":"38"},{"size":941,"mtime":1611985346800,"results":"48","hashOfConfig":"38"},{"size":5937,"mtime":1612278047499,"results":"49","hashOfConfig":"38"},{"size":2315,"mtime":1611985346800,"results":"50","hashOfConfig":"38"},{"size":623,"mtime":1611985346800,"results":"51","hashOfConfig":"38"},{"size":362,"mtime":1612163640000,"results":"52","hashOfConfig":"38"},{"size":199,"mtime":1612163640000,"results":"53","hashOfConfig":"38"},{"size":575,"mtime":1612163640000,"results":"54","hashOfConfig":"38"},{"size":1355,"mtime":1612163640000,"results":"55","hashOfConfig":"38"},{"size":2145,"mtime":1612163640000,"results":"56","hashOfConfig":"38"},{"size":1890,"mtime":1612163640000,"results":"57","hashOfConfig":"38"},{"size":1681,"mtime":1612163640000,"results":"58","hashOfConfig":"38"},{"size":4587,"mtime":1612163640000,"results":"59","hashOfConfig":"38"},{"size":923,"mtime":1612277994767,"results":"60","hashOfConfig":"38"},{"size":3077,"mtime":1612163640000,"results":"61","hashOfConfig":"38"},{"size":475,"mtime":1612163640000,"results":"62","hashOfConfig":"38"},{"size":658,"mtime":1612006503132,"results":"63","hashOfConfig":"38"},{"size":188,"mtime":1611743083655,"results":"64","hashOfConfig":"38"},{"size":443,"mtime":1612004549310,"results":"65","hashOfConfig":"38"},{"size":374,"mtime":1612003750051,"results":"66","hashOfConfig":"38"},{"size":2810,"mtime":1612278047499,"results":"67","hashOfConfig":"38"},{"size":5604,"mtime":1612074626970,"results":"68","hashOfConfig":"38"},{"size":589,"mtime":1611744033567,"results":"69","hashOfConfig":"38"},{"size":512,"mtime":1612087110521,"results":"70","hashOfConfig":"38"},{"size":324,"mtime":1611494431955,"results":"71","hashOfConfig":"38"},{"size":1976,"mtime":1612278047499,"results":"72","hashOfConfig":"38"},{"size":782,"mtime":1612118897244,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"95r6f9",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},"E:\\Projects\\Healing-Waters\\src\\index.js",[],["155","156"],"E:\\Projects\\Healing-Waters\\src\\App.js",[],"E:\\Projects\\Healing-Waters\\src\\reportWebVitals.js",[],"E:\\Projects\\Healing-Waters\\src\\GlobalStyle.js",[],"E:\\Projects\\Healing-Waters\\src\\pages\\Home.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\Navigation.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\About.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\Header.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\GallerySmall.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\Programs.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\Foods.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\CTA.js",["157","158"],"import React, { useState } from 'react';\r\nimport Datepicker from './datePicker/Datepicker';\r\nimport usePrograms from '../hooks/usePrograms';\r\nimport { Link } from 'react-router-dom';\r\nimport CTAStyle from '../styles/CTAStyle';\r\nimport wlotus from '../static/lotuswhite.png';\r\nimport useServices from '../hooks/useServices';\r\nimport backendApi from '../api/backendApi';\r\n\r\nimport styled from 'styled-components'; ///////\r\nconst CTA = () => {\r\n\tconst warning = styled.div`\r\n\t\tcolor: red !important;\r\n\t\tfont-size: 16px;\r\n\t`;\r\n\tconst [firstName, setfirstName] = useState('');\r\n\tconst [lastName, setlastName] = useState('');\r\n\tconst [checkIn, setcheckIn] = useState(new Date());\r\n\tconst [checkOut, setcheckOut] = useState(checkIn);\r\n\tconst [program, setprogram] = useState('');\r\n\tconst [programs] = usePrograms([]);\r\n\tconst [services] = useServices([]);\r\n\tconst [people, setpeople] = useState('');\r\n\tconst [comment, setcomment] = useState('');\r\n\tconst [availableRooms, setavailableRooms] = useState([]);\r\n\tconst [pickedRoom, setpickedRoom] = useState('');\r\n\tconst [showMessage, setshowMessage] = useState('');\r\n\tconst [occupencyWarning, setoccupencyWarning] = useState('');\r\n\r\n\tconst validateForm = () =>\r\n\t\tfirstName !== '' &&\r\n\t\tlastName !== '' &&\r\n\t\tprogram !== '' &&\r\n\t\tpeople !== '' &&\r\n\t\toccupencyWarning === ''\r\n\t\t\t? true\r\n\t\t\t: false;\r\n\r\n\tconst SubmitHandler = () => {\r\n\t\tif (validateForm()) {\r\n\t\t\tsetfirstName('');\r\n\t\t\tsetlastName('');\r\n\t\t\tsetprogram('');\r\n\t\t\tsetpickedRoom('');\r\n\t\t\tsetpeople('');\r\n\t\t\tsetcomment('');\r\n\t\t} else {\r\n\t\t\tsetshowMessage('please fill the form first with correct input');\r\n\t\t}\r\n\t};\r\n\tconst handleOccupancy = () => {\r\n\t\tlet selectedRoom = availableRooms.find(\r\n\t\t\t(room) => room.number === pickedRoom\r\n\t\t);\r\n\t\tconsole.log({ availableRooms, pickedRoom, selectedRoom });\r\n\t\tselectedRoom.capacity < people\r\n\t\t\t? setoccupencyWarning(\r\n\t\t\t\t\t`maximum capacity of the room is ${selectedRoom.capacity},please select another room or reduce no of people`\r\n\t\t\t  )\r\n\t\t\t: setoccupencyWarning('');\r\n\t};\r\n\r\n\tconst getAvailableRooms = (date) => {\r\n\t\tlet checkedIn = date;\r\n\t\tlet checkedOut = new Date();\r\n\t\tprogram === '7 DAYS'\r\n\t\t\t? new Date(checkedOut.setDate(date.getDate() + 7))\r\n\t\t\t: new Date(checkedOut.setDate(date.getDate() + 2));\r\n\r\n\t\tsetcheckIn(checkedIn);\r\n\t\tsetcheckOut(checkedOut);\r\n\t\troomStatusApi({ checkedIn, checkedOut });\r\n\t};\r\n\tconst roomStatusApi = async ({ checkedIn, checkedOut }) => {\r\n\t\ttry {\r\n\t\t\tconst response = await backendApi.post(`/available-rooms/`, {\r\n\t\t\t\tcheck_in: checkedIn,\r\n\t\t\t\tcheck_out: checkedOut,\r\n\t\t\t});\r\n\r\n\t\t\tsetavailableRooms(response.data);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log({ err });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CTAStyle>\r\n\t\t\t<img src={wlotus} alt='' />\r\n\t\t\t<h4>\r\n\t\t\t\tUltimate Relaxation <br />\r\n\t\t\t\tFor Your Body &amp; Soul.\r\n\t\t\t</h4>\r\n\t\t\t<form onSubmit={SubmitHandler}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-lg-6 col-sm-12 mt-4'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tplaceholder='First name'\r\n\t\t\t\t\t\t\tonChange={(e) => setfirstName(e.target.value)}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-lg-6 col-sm-12 mt-4'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tplaceholder='Last name'\r\n\t\t\t\t\t\t\tonChange={(e) => setlastName(e.target.value)}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row mt-4'>\r\n\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclass='form-control'\r\n\t\t\t\t\t\t\tplaceholder='Program'\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetprogram(e.target.value);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option>Program</option>\r\n\t\t\t\t\t\t\t<option>2 DAYS</option>\r\n\t\t\t\t\t\t\t<option>7 DAYS</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='row mt-4'>\r\n\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t<Datepicker\r\n\t\t\t\t\t\t\tcheckIn={checkIn}\r\n\t\t\t\t\t\t\tsetCheckIn={(date) => {\r\n\t\t\t\t\t\t\t\tsetcheckIn(date);\r\n\t\t\t\t\t\t\t\tgetAvailableRooms(date);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='row mt-4'>\r\n\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tplaceholder='# of people'\r\n\t\t\t\t\t\t\tonChange={(e) => setpeople(parseInt(e.target.value))}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{occupencyWarning !== '' ? (\r\n\t\t\t\t\t<h5 style={{ color: 'red' }}> {occupencyWarning}</h5>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<div className='row mt-4'>\r\n\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclass='form-control'\r\n\t\t\t\t\t\t\tplaceholder='pick a room'\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tsetpickedRoom(parseInt(e.target.value));\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option>Pick a room</option>\r\n\t\t\t\t\t\t\t{availableRooms.map((room) => (\r\n\t\t\t\t\t\t\t\t<option>{room.number}</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='row mt-4'>\r\n\t\t\t\t\t<div className='col'>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\t\trows='3'\r\n\t\t\t\t\t\t\tplaceholder='Additional Comment? (optional)'\r\n\t\t\t\t\t\t\tonChange={(e) => setcomment(e.target.value)}\r\n\t\t\t\t\t\t\tonClick={handleOccupancy}\r\n\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row mt-4'>\r\n\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: validateForm() ? `/services` : '/',\r\n\t\t\t\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t\t\t\tprogramType: program,\r\n\t\t\t\t\t\t\t\t\tprograms: programs,\r\n\t\t\t\t\t\t\t\t\tservices: services,\r\n\t\t\t\t\t\t\t\t\tfirstName,\r\n\t\t\t\t\t\t\t\t\tlastName,\r\n\t\t\t\t\t\t\t\t\tcheckIn,\r\n\t\t\t\t\t\t\t\t\tcheckOut,\r\n\t\t\t\t\t\t\t\t\tprogram,\r\n\t\t\t\t\t\t\t\t\tpickedRoom,\r\n\t\t\t\t\t\t\t\t\tpeople,\r\n\t\t\t\t\t\t\t\t\tcomment,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button className='btn-3' value='Reserve' onClick={SubmitHandler}>\r\n\t\t\t\t\t\t\t\tReserve\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{showMessage !== '' ? (\r\n\t\t\t\t\t\t\t\t<h5 style={{ color: 'yellow' }}> {showMessage}</h5>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</CTAStyle>\r\n\t);\r\n};\r\n\r\nexport default CTA;\r\n","E:\\Projects\\Healing-Waters\\src\\components\\Footer.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\Gallery.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\Button.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\icons.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\callnow.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\AboutStyled.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\HeaderStyle.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\GallerySmallStyle.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\CTAStyle.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\Programs.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\FoodsStyle.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\GalleryStyle.js",[],"E:\\Projects\\Healing-Waters\\src\\styles\\FooterStyle.js",[],"E:\\Projects\\Healing-Waters\\src\\hooks\\useRoomsList.js",["159","160"],"import {useEffect, useState} from 'react';\r\nimport backendApi from '../api/backendApi';\r\n\r\nexport default () => {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const searchApi = async ({\r\n\t\t\tfirstName,\r\n\t\t\tlastName,\r\n\t\t\tcheckIn,\r\n\t\t\tprogram,\r\n\t\t\tpeople,\r\n\t\t\tcomment,\r\n\t\t}) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await backendApi.post('/rooms');\r\n\t\t\t\tsetRooms(response.data);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetErrorMessage(err);\r\n\t\t\t\t//\tconsole.log('error', err);\r\n\t\t\t}\r\n\t\t};\r\n\r\n    \r\n    // useEffect(() => {\r\n    //     searchApi();\r\n    // }, []);\r\n\r\n    return [rooms, searchApi, errorMessage];\r\n};\r\n",["161","162"],"E:\\Projects\\Healing-Waters\\src\\api\\backendApi.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\datePicker\\Datepicker.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\datePicker\\CustomInput.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\Services.js",["163"],"import React, { useState } from 'react';\r\nimport differenceBy from 'lodash/differenceBy';\r\nimport room_img from '../assets/room_img.png';\r\nimport Button from '@material-ui/core/Button';\r\nimport ServiceTransferList from './ServiceTransferList';\r\nimport { Card, Col, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Services = (props) => {\r\n\r\n\tconst programs = props.location.state.programs;\r\n\r\n\tlet services = props.location.state.services;\r\n\t\r\n\tconst [checked, setChecked] = useState(false);\r\n\t\r\n\t\r\n\tconst selectedProgramType = props.location.state.programType;\r\n\tconsole.log({ selectedProgramType });\r\n\t\r\n\t\r\n\t\r\n\t\r\n\r\n\tconst programDefaultServices = programs.find(\r\n\t\t(program) =>  program.type===selectedProgramType).services\r\n\t\t\r\n\t\r\n\tconst programDefaultPrice = programDefaultServices.reduce((result,current)=>result+current.price,0);\r\n\tconst [totPrice, SetTotPrice] = useState(programDefaultPrice);\r\n\r\n\tlet extraServices = differenceBy(services, programDefaultServices, 'id');\r\n\t\t\r\n\tconst handlePrice = (price, checked) => {\r\n\t\tchecked ? SetTotPrice(totPrice + price) :  SetTotPrice(totPrice - price) ;\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>Extra Services</h4>\r\n\t\t\t<form>\r\n\t\t\t\t<ul className='list-unstyled'>\r\n\t\t\t\t\t{extraServices.map((service) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={service.id}>\r\n\t\t\t\t\t\t\t\t<div class='form-check'>\r\n\t\t\t\t\t\t\t\t\t<label class='form-check-label' for='exampleCheck1'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\t\t\tclass='form-check-input'\r\n\t\t\t\t\t\t\t\t\t\t\tid='exampleCheck1'\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetChecked(!checked);\r\n\t\t\t\t\t\t\t\t\t\t\t\thandlePrice(service.price,!checked);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{`${service.name} for $${service.price}`}\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<h4>price ${totPrice}</h4>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: `/checkout`,\r\n\t\t\t\t\t\tstate: {\t\t\r\n\t\t\t\t\t\t\ttotalAmount: totPrice,\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<button type='submit' class='btn btn-primary'>\r\n\t\t\t\t\t\tCheck Out\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Services;\r\n","E:\\Projects\\Healing-Waters\\src\\components\\ServiceTransferList.js",["164","165"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport PriceIcon from './PriceIcon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tmargin: 'auto',\r\n\t},\r\n\tcardHeader: {\r\n\t\tpadding: theme.spacing(1, 2),\r\n\t},\r\n\tlist: {\r\n\t\twidth: 200,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\toverflow: 'auto',\r\n\t},\r\n\titem: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(0.5, 0),\r\n\t},\r\n}));\r\n\r\nfunction not(a, b) {\r\n\treturn a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n\treturn a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n\treturn [...a, ...not(b, a)];\r\n}\r\n\r\nconst ServiceTransferList = ({\r\n\tallServices,\r\n\tprogramDefaultServices,\r\n\ttotalPrice,\r\n\tselectedServices,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\tconst [checked, setChecked] = React.useState([]);\r\n\tconst [left, setLeft] = React.useState(allServices);\r\n\tconst [right, setRight] = React.useState(programDefaultServices);\r\n\tselectedServices(right);\r\n\tconst leftChecked = intersection(checked, left);\r\n\tconst rightChecked = intersection(checked, right);\r\n\r\n\tconst handleTotalPrice = (right) => {\r\n\t\t{\r\n\t\t\tconst price = right.reduce(\r\n\t\t\t\t(result, current) => result + current.price,\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t\t\ttotalPrice(price);\r\n\t\t\treturn price;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleToggle = (value) => () => {\r\n\t\tconst currentIndex = checked.indexOf(value);\r\n\t\tconst newChecked = [...checked];\r\n\r\n\t\tif (currentIndex === -1) {\r\n\t\t\tnewChecked.push(value);\r\n\t\t} else {\r\n\t\t\tnewChecked.splice(currentIndex, 1);\r\n\t\t}\r\n\t\tsetChecked(newChecked);\r\n\t};\r\n\tconst numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n\tconst handleToggleAll = (items) => () => {\r\n\t\tif (numberOfChecked(items) === items.length) {\r\n\t\t\tsetChecked(not(checked, items));\r\n\t\t} else {\r\n\t\t\tsetChecked(union(checked, items));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCheckedRight = () => {\r\n\t\tsetRight(right.concat(leftChecked));\r\n\t\tsetLeft(not(left, leftChecked));\r\n\t\tsetChecked(not(checked, leftChecked));\r\n\t};\r\n\r\n\tconst handleCheckedLeft = () => {\r\n\t\tsetLeft(left.concat(rightChecked));\r\n\t\tsetRight(not(right, rightChecked));\r\n\t\tsetChecked(not(checked, rightChecked));\r\n\t};\r\n\r\n\tconst customList = (title, services) => (\r\n\t\t<Card>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classes.cardHeader}\r\n\t\t\t\tavatar={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonClick={handleToggleAll(services)}\r\n\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\tnumberOfChecked(services) === services.length &&\r\n\t\t\t\t\t\t\tservices.length !== 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tindeterminate={\r\n\t\t\t\t\t\t\tnumberOfChecked(services) !== services.length &&\r\n\t\t\t\t\t\t\tnumberOfChecked(services) !== 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdisabled={services.length === 0}\r\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'all items selected' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tsubheader={`${numberOfChecked(services)}/${services.length} selected`}\r\n\t\t\t/>\r\n\t\t\t<Divider />\r\n\t\t\t<List className={classes.list} dense component='div' role='list'>\r\n\t\t\t\t{services.map((service) => {\r\n\t\t\t\t\tconst labelId = `transfer-list-all-item-${service}-label`;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\tTransitionComponent={Zoom}\r\n\t\t\t\t\t\t\ttitle={<PriceIcon price={service.price} />}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\tkey={service.id}\r\n\t\t\t\t\t\t\t\trole='listitem'\r\n\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\tonClick={handleToggle(service)}\r\n\t\t\t\t\t\t\t\tclassName={classes.item}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tchecked={checked.indexOf(service) !== -1}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText id={labelId} primary={service.name} />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<ListItem />\r\n\t\t\t</List>\r\n\t\t</Card>\r\n\t);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tspacing={2}\r\n\t\t\t\tjustify='center'\r\n\t\t\t\talignItems='center'\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t>\r\n\t\t\t\t<Grid item>{customList('Extra Services', left)}</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Grid container direction='column' alignItems='center'>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={handleCheckedRight}\r\n\t\t\t\t\t\t\tdisabled={leftChecked.length === 0}\r\n\t\t\t\t\t\t\taria-label='move selected right'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&gt;\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={handleCheckedLeft}\r\n\t\t\t\t\t\t\tdisabled={rightChecked.length === 0}\r\n\t\t\t\t\t\t\taria-label='move selected left'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&lt;\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>{customList('Program Default Services', right)}</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<div className='Checkout'>\r\n\t\t\t\t<div className='total_price  '>\r\n\t\t\t\t\tTotal Price: &nbsp;\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={'outlined'}\r\n\t\t\t\t\t\tcolor={'secondary'}\r\n\t\t\t\t\t\tonClick={() => totalPrice(handleTotalPrice(right))}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&#36;&nbsp;\r\n\t\t\t\t\t\t{handleTotalPrice(right)}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ServiceTransferList;\r\n\r\n","E:\\Projects\\Healing-Waters\\src\\hooks\\usePrograms.js",["166"],"import {useEffect, useState} from 'react';\r\nimport backendApi from '../api/backendApi';\r\n\r\nexport default () => {\r\n    const [programs, setPrograms] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const programsApi = async () => {\r\n        try {\r\n            const response = await backendApi.get('/programs');\r\n            setPrograms(response.data);\r\n        } catch (err) {\r\n            setErrorMessage(err);\r\n        }\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        programsApi();\r\n    }, []);\r\n\r\n    return [programs, programsApi, errorMessage];\r\n};\r\n","E:\\Projects\\Healing-Waters\\src\\hooks\\useServices.js",["167"],"import { useState, useEffect } from 'react';\r\nimport backendApi from '../api/backendApi';\r\nexport default () => {\r\n\tconst [services, setServices] = useState([]);\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\tconst servicesApi = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await backendApi.get('/services/');\r\n\t\t\tsetServices(response.data);\r\n\t\t} catch (err) {\r\n\t\t\tsetErrorMessage(err);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tservicesApi();\r\n\t}, []);\r\n\r\n\treturn [services, servicesApi, errorMessage];\r\n};\r\n","E:\\Projects\\Healing-Waters\\src\\components\\PriceIcon.js",[],"E:\\Projects\\Healing-Waters\\src\\components\\Checkout.js",["168","169"],"E:\\Projects\\Healing-Waters\\src\\hooks\\useRoomReserve.js",["170"],"import { useState } from 'react';\r\nimport backendApi from '../api/backendApi';\r\n\r\nexport default () => {\r\n\tconst [roomReserve, setRoomReserve] = useState(null);\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\r\n\tconst roomReserveApi = async ({\r\n\t\tfirstName,\r\n\t\tlastName,\r\n\t\tcheckIn,\r\n\t\tcheckOut,\r\n\t\tprogram,\r\n\t\tpickedRoom,\r\n\t\tpeople,\r\n\t\tcomment,\r\n\t}) => {\r\n\t\ttry {\r\n\t\t\tconst response = await backendApi.post(`/rooms/${pickedRoom}/reserve/`, {\r\n\t\t\t\tfirstName,\r\n\t\t\t\tlastName,\r\n\t\t\t\tcheck_in: checkIn,\r\n\t\t\t\tcheck_out:checkOut,\r\n\t\t\t\tprogram,\r\n\t\t\t\tpickedRoom,\r\n\t\t\t\tpeople,\r\n\t\t\t\tcomment,\r\n\t\t\t});\r\n\t\t\tsetRoomReserve(response.data);\r\n\t\t\tconsole.log({roomReserve})\r\n\t\t} catch (err) {\r\n\t\t\tsetErrorMessage(err);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [ roomReserve,roomReserveApi, errorMessage];\r\n};\r\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":12,"column":8,"nodeType":"177","messageId":"178","endLine":12,"endColumn":15},{"ruleId":"175","severity":1,"message":"179","line":29,"column":9,"nodeType":"177","messageId":"178","endLine":29,"endColumn":20},{"ruleId":"175","severity":1,"message":"180","line":1,"column":9,"nodeType":"177","messageId":"178","endLine":1,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":4,"column":1,"nodeType":"183","endLine":23,"endColumn":3},{"ruleId":"171","replacedBy":"184"},{"ruleId":"173","replacedBy":"185"},{"ruleId":"175","severity":1,"message":"186","line":10,"column":23,"nodeType":"177","messageId":"178","endLine":10,"endColumn":38},{"ruleId":"175","severity":1,"message":"187","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":63,"column":3,"nodeType":"190","messageId":"191","endLine":70,"endColumn":4},{"ruleId":"181","severity":1,"message":"182","line":4,"column":1,"nodeType":"183","endLine":22,"endColumn":3},{"ruleId":"181","severity":1,"message":"182","line":3,"column":1,"nodeType":"183","endLine":20,"endColumn":3},{"ruleId":"175","severity":1,"message":"192","line":31,"column":18,"nodeType":"177","messageId":"178","endLine":31,"endColumn":28},{"ruleId":"175","severity":1,"message":"193","line":74,"column":9,"nodeType":"177","messageId":"178","endLine":74,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":4,"column":1,"nodeType":"183","endLine":38,"endColumn":3},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'warning' is assigned a value but never used.","Identifier","unusedVar","'roomReserve' is assigned a value but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["194"],["195"],"'setnew_services' is assigned a value but never used.","'CardHeader' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setMessage' is assigned a value but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]